#!/bin/bash

`msh src lib/x11`

pomodoro_settings="$HOME/.pomodoro.rc"
[ -e $pomodoro_settings ] && source $pomodoro_settings

pomodoro_logs_dir="$(realpath "${pomodoro_logs_dir:-$HOME/pomodoro/logs}")"
pomodoro_log_editor="${pomodoro_log_editor:-${EDITOR:-xdg-open}}"
today_link="$pomodoro_logs_dir/today.md"
before_link="$pomodoro_logs_dir/before.md"
start_timestamp="$(date)"
num_pomos_this_session=0

mkdir -p "$pomodoro_logs_dir"

CURRENT_VIMTASK_SCOPE=
CURRENT_POMO=
function read_log_metadata() {
  local VIMTASK_SCOPE=$(tac "$today_link" | grep -m1 '^#.*|')

  if [ -n "$VIMTASK_SCOPE" ]; then
    CURRENT_VIMTASK_SCOPE="|${VIMTASK_SCOPE#*|}"
  fi

  local pomo=$(tac "$today_link" | grep -E --only-matching -m1 '^### \[.*\] Pomodoro [0-9]+')
  pomo=${pomo#\###*Pomodoro}
  pomo=${pomo%%|*}
  pomo=${pomo/[^0-9]}
  CURRENT_POMO=${pomo:-0}
}

function write_log() {
  local VIMTASK_SCOPE=
  local OPTIND=1
  while getopts ":t" opt; do
    case $opt in
      t) VIMTASK_SCOPE=" $CURRENT_VIMTASK_SCOPE" ;;
    esac
  done
  shift $(($OPTIND-1))

  local DEPTH="####"
  if [ $# -gt 1 ]; then
    DEPTH=${1}
    shift
  fi

  local MSG="$DEPTH [$(date +%H:%M)] ${1:-}$VIMTASK_SCOPE"

  echo -e "$MSG"
  echo -e "$MSG" >> "$today_link"
}
function write_log_raw() {
  echo -e "$1"
  echo -e "$1" >> "$today_link"
}
function write_log_horiz_sep() {
  write_log_raw "--------------------------------------------------------------------------------\n"
}

function show_log_editor() {
  _msh_focus_or_exec "$pomodoro_log_editor" "$(realpath "$today_link")"
  read_log_metadata
}

function xok {
  xmessage -default okay "$@"
}

function xyesno {
  xmessage -default yes -buttons yes:0,no:1 "$@"
  return
}

function _start_day() {
  write_log_raw "# :pomodoro: || +pomodoro status:pending"
  write_log_raw

  local LAST_POMO_RELATIVE=$(realpath --relative-to="$pomodoro_logs_dir" "$before_link")
  # TODO calculate LAST POMO date and use that in the vim-task filter instead of
  # "today" and "tomorrow"
  write_log_raw "## Recall and Plan | due:$(date --date=today +%Y-%m-%d)\n"
  write_log_raw "Last Pomodoro: [$(basename "$LAST_POMO_RELATIVE")]($LAST_POMO_RELATIVE)"
  write_log_raw "> TODO bring in some stats from last pomo, like projects and tasks\n\n"
  write_log_raw "## Today $(date) | due:$(date --date=tomorrow +%Y-%m-%d)\n"
}

function _end_day() {
  local end_timestamp="$(date)"
  [ "$start_timestamp" == "$end_timestamp" ] && return

  local bye_stats="\n## Summary\n- started: $start_timestamp\n- ended:  $(date)\n- pomodoros: $num_pomos_this_session"
  write_log "End Day\n$bye_stats\n--------------------------------------------------------------------------------"
  echo -e "$bye_stats" | xok -nearmouse -file -
}

# cases
# - today entry deleted, want to start over
# - new day, current today link is old
#   - day is over and want to continue pomodoro in new file

# ensure today link is correct
# ensure today's file is ready for logging
function _todays_pomolog_file() {
  local pomolog_now_file="$pomodoro_logs_dir/$(date +%Y.%m.%d).md"
  local today_link_file="$(realpath "$today_link")"

  if [[ -e "$today_link_file" && "$pomolog_now_file" != "$today_link_file" ]]; then
    # today_link points to a valid file, and we need to change it
    _end_day
    if [ "$pomolog_now_file" != "$today_link_file" ]; then
      ln -srf "$today_link_file" "$before_link"
    fi
    ln -srf "$pomolog_now_file" "$today_link"
  fi

  if [ ! -e "$pomolog_now_file" ]; then
    _start_day
  fi
}

POMO_TIME_LEFT=
function _pomodoro() {
  _todays_pomolog_file
  read_log_metadata
  CURRENT_POMO=$((CURRENT_POMO+1))

  write_log -t "###" "Pomodoro $CURRENT_POMO"

  local POMO_END=$((EPOCHSECONDS + 25*60))
  while [ $EPOCHSECONDS -lt $POMO_END ]; do
    POMO_TIME_LEFT=$(( (POMO_END - EPOCHSECONDS) / 60 ))m
    _update_process_name "$POMO_TIME_LEFT"
    sleep 5m
  done

  _update_process_name "END"
  write_log "End Pomodoro $CURRENT_POMO"

  # TAKE NOTES
  if xyesno -nearmouse -file - <<-EOF
  End of pomodoro $CURRENT_POMO

  Take notes?
EOF
  then
    write_log "Take notes"
    show_log_editor
  fi

  num_pomos_this_session=$((num_pomos_this_session+1))

  # TAKE A BREAK heh?
  xyesno -nearmouse "Take a break?"

  # POMODORO?
  xyesno -nearmouse "Pomodoro $((CURRENT_POMO+1))?"
  return
}

# Update the process_name to see remaining time
function _update_process_name() {
  local STATUS="$1"
  local my_name_is=`basename $0`
  if [ -n "$STATUS" ]; then
    my_name_is+="[$STATUS]"
  fi

  # tmux support
  if [ -n "$TMUX" ]; then
    # update tmux pane title
    printf '\033]2;%s\033\\' "$my_name_is"
  fi

  echo -n "$my_name_is" > /proc/$$/comm
}

OPTIND=1
while getopts "t" opt; do
  case "$opt" in
    t) realpath "$today_link"; exit;;
  esac
done

# if there's a pomodoro already running, just show the log
THIS_PID=$$
if pgrep "$(basename "$0")" | grep -v $THIS_PID &>/dev/null; then
  write_log
  show_log_editor
  exit 0
fi

if xyesno -nearmouse "Plan session? Take notes?"; then
  show_log_editor
fi
while _pomodoro; do true; done
_end_day
